grammar www.ubx.ch.OpenAir with org.eclipse.xtext.common.Terminals

generate openAir "http://www.ubx.www/ch/OpenAir"
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

OpenAir:
	airspaces+=Airspace*;

Airspace:
	thedef=TheDef thegeom+=TheGeom*;

TheDef:
	asclass=AsClass sp+=SP* sb+=SB* name=AsName at+=AT* limit=Limites;

AsClass:
	{AsClass}
	'AC' name=ClassType?;

enum ClassType:
	A | B | C | D | E | F | G | Q | R | W | P | GP | TMZ | CTR | Restricted | UKN;

SP:
	'SP' sp0=INT ',' sp1=INT ',' sp2=INT ',' sp3=INT ',' sp4=INT;

SB:
	'SB' sbVal1=INT "," sbVal2=INT "," sbVal3=INT;

AsName:
	'AN' name=STRING;

Limites:
	(LLimit | HLimit);

LLimit:
	lowLimit=LowLimit highLimit=HighLimit;

HLimit:
	heighLimit=HighLimit lowLimit=LowLimit;

TheGeom:
	V | DP | DA | DB | DC;

LowLimit:
	'AL' ll=Limit;

HighLimit:
	'AH' hl=Limit;

Limit:
	(FL | SFC | GND | UNL | VAL);

FL:
	'FL' value=INT;

SFC:
	{SFC}
	'SFC';

GND:
	{GND}
	'GND';

UNL:
	{UNL}
	'UNL';

VAL:
	value=INT unit=Units;

enum Units:
	feed='ft' | meter='m' | msl='MSL' | m_msl='m MSL' | ft_msl='ft MSL' | agl='AGL' | m_agl='m AGL' | ft_AGL='ft AGL' |
	AMSL='AMSL' | m_AMSL='m AMSL';

V:
	'V' vsub=Vsub;

Vsub:
	('X=' x=Point | 'D=' d=D);

D:
	('+' | '-');

DC:
	'DC' radius=REAL;

DP:
	'DP' dp=Point;

Point:
	Point1 | Point2 | Point3 | Point4;

Point1:
	longD=LongDegr longM=MinSec longS=MinSec ns=NS latD=LatDegr latM=MinSec latS=MinSec we=WE;

Point2:
	longD=LongDegr longMf=MinDec ns=NS latD=LatDegr latMf=MinDec we=WE;

Point3:
	longD=LongDegr longM=MinSec longS=SecDec ns=NS latD=LatDegr latM=MinSec latS=SecDec we=WE;

Point4:
	longD=LongDec ns=NS latD=LatDec we=WE;

LongDegr:
	value=INT;

LatDegr:
	value=INT;

MinSec:
	':' value=INT;

SecDec:
	':' value=REAL;

MinDec:
	':' value=REAL;

LongDec:
	value=REAL;

LatDec:
	value=REAL;

enum WE:
	W='W' | E='E';

enum NS:
	N='N' | S='S';

DA:
	'DA' da=DaParams;

DaParams:
	DaParams1 | DaParams2;

DaParams1:
	radius=REAL ',' angleStart=INT ',' angleEnd=INT;

DaParams2:
	radius=INT ',' angleStart=INT ',' angleEnd=INT;

DB:
	'DB' dp0=Point (',')? dp1=Point;

AT:
	'AT' lp=Point;

terminal REAL:
	('-')? INT+ '.' INT+;

terminal SL_COMMENT:
	'*' !('\n' | '\r')* ('\r'? '\n')?;
	