/*
 * generated by Xtext
 */
package www.ubx.ch.formatting;

import org.eclipse.xtext.formatting.impl.AbstractDeclarativeFormatter;
import org.eclipse.xtext.formatting.impl.FormattingConfig;

import www.ubx.ch.services.OpenAirGrammarAccess;

/**
 * This class contains custom formatting description.
 * 
 * see : http://www.eclipse.org/Xtext/documentation/latest/xtext.html#formatting
 * on how and when to use it
 * 
 * Also see {@link org.eclipse.xtext.xtext.XtextFormattingTokenSerializer} as an
 * example
 */
public class OpenAirFormatter extends AbstractDeclarativeFormatter {

	@Override
	protected void configureFormatting(FormattingConfig c) {
		c.setAutoLinewrap(80);
		OpenAirGrammarAccess f = (OpenAirGrammarAccess) getGrammarAccess();
		c.setLinewrap(0, 1, 2).before(f.getSL_COMMENTRule());
		c.setLinewrap(0, 1, 2).after(f.getSL_COMMENTRule());
		c.setLinewrap(0, 1, 2).before(f.getAsClassRule());
		c.setLinewrap(0, 1, 2).after(f.getAsClassRule());
		c.setLinewrap(0, 1, 2).before(f.getAsNameRule());
		c.setLinewrap(0, 1, 2).after(f.getAsNameRule());
		c.setLinewrap(0, 1, 2).before(f.getHighLimitRule());
		c.setLinewrap(0, 1, 2).after(f.getHighLimitRule());
		c.setLinewrap(0, 1, 2).before(f.getLowLimitRule());
		c.setLinewrap(0, 1, 2).after(f.getLowLimitRule());
		c.setLinewrap(0, 1, 2).before(f.getDPRule());
		c.setLinewrap(0, 1, 2).after(f.getDPRule());
		c.setLinewrap(0, 1, 2).before(f.getDBRule());
		c.setLinewrap(0, 1, 2).after(f.getDBRule());
		c.setLinewrap(0, 1, 2).before(f.getVRule());
		c.setLinewrap(0, 1, 2).after(f.getVRule());

		c.setNoSpace().before(f.getSepRule());
		c.setNoSpace().after(f.getSepRule());

		// TODO - complete!
	}
}
