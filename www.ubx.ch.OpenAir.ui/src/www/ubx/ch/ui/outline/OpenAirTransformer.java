/*
 * generated by Xtext
 */
package www.ubx.ch.ui.outline;

import org.eclipse.xtext.ui.editor.outline.ContentOutlineNode;
import org.eclipse.xtext.ui.editor.outline.transformer.AbstractDeclarativeSemanticModelTransformer;

import www.ubx.ch.openAir.Airspace;
import www.ubx.ch.openAir.AsName;
import www.ubx.ch.openAir.Point;

/**
 * customization of the default outline structure
 * 
 */
public class OpenAirTransformer extends AbstractDeclarativeSemanticModelTransformer {

	/**
	 * This method will be called by naming convention: <br>
	 * - method name must be createNode <br>
	 * - first param: subclass of EObject <br>
	 * - second param: ContentOutlineNode
	 */
	public ContentOutlineNode createNode(Airspace semanticNode, ContentOutlineNode parentNode) {
		ContentOutlineNode node = super.newOutlineNode(semanticNode, parentNode);
		node.setLabel("Airspace " + node.getLabel());
		return node;
	}

	public ContentOutlineNode createNode(AsName semanticNode, ContentOutlineNode parentNode) {
		ContentOutlineNode node = super.newOutlineNode(semanticNode, parentNode);
		node.setLabel("Name " + node.getLabel());
		return node;
	}

	public ContentOutlineNode createNode(Point semanticNode, ContentOutlineNode parentNode) {
		ContentOutlineNode node = super.newOutlineNode(semanticNode, parentNode);
		node.setLabel("Point " + node.getLabel());
		return node;
	}

}
