/*
* generated by Xtext
*/
package www.ubx.ch.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import www.ubx.ch.services.OpenAirGrammarAccess;

public class OpenAirParser extends AbstractContentAssistParser {
	
	@Inject
	private OpenAirGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected www.ubx.ch.ui.contentassist.antlr.internal.InternalOpenAirParser createParser() {
		www.ubx.ch.ui.contentassist.antlr.internal.InternalOpenAirParser result = new www.ubx.ch.ui.contentassist.antlr.internal.InternalOpenAirParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getLimitesAccess().getAlternatives(), "rule__Limites__Alternatives");
					put(grammarAccess.getTheGeomAccess().getAlternatives(), "rule__TheGeom__Alternatives");
					put(grammarAccess.getLimitAccess().getAlternatives(), "rule__Limit__Alternatives");
					put(grammarAccess.getVsubAccess().getAlternatives(), "rule__Vsub__Alternatives");
					put(grammarAccess.getDirAccess().getAlternatives(), "rule__Dir__Alternatives");
					put(grammarAccess.getPointAccess().getAlternatives(), "rule__Point__Alternatives");
					put(grammarAccess.getDaParamsAccess().getAlternatives(), "rule__DaParams__Alternatives");
					put(grammarAccess.getClassTypeAccess().getAlternatives(), "rule__ClassType__Alternatives");
					put(grammarAccess.getUnitsAccess().getAlternatives(), "rule__Units__Alternatives");
					put(grammarAccess.getWEAccess().getAlternatives(), "rule__WE__Alternatives");
					put(grammarAccess.getNSAccess().getAlternatives(), "rule__NS__Alternatives");
					put(grammarAccess.getAirspaceAccess().getGroup(), "rule__Airspace__Group__0");
					put(grammarAccess.getTheDefAccess().getGroup(), "rule__TheDef__Group__0");
					put(grammarAccess.getAsClassAccess().getGroup(), "rule__AsClass__Group__0");
					put(grammarAccess.getSPAccess().getGroup(), "rule__SP__Group__0");
					put(grammarAccess.getSBAccess().getGroup(), "rule__SB__Group__0");
					put(grammarAccess.getAsNameAccess().getGroup(), "rule__AsName__Group__0");
					put(grammarAccess.getLimitesAccess().getGroup_0(), "rule__Limites__Group_0__0");
					put(grammarAccess.getLimitesAccess().getGroup_1(), "rule__Limites__Group_1__0");
					put(grammarAccess.getLowLimitAccess().getGroup(), "rule__LowLimit__Group__0");
					put(grammarAccess.getHighLimitAccess().getGroup(), "rule__HighLimit__Group__0");
					put(grammarAccess.getFLAccess().getGroup(), "rule__FL__Group__0");
					put(grammarAccess.getSFCAccess().getGroup(), "rule__SFC__Group__0");
					put(grammarAccess.getGNDAccess().getGroup(), "rule__GND__Group__0");
					put(grammarAccess.getUNLAccess().getGroup(), "rule__UNL__Group__0");
					put(grammarAccess.getVALAccess().getGroup(), "rule__VAL__Group__0");
					put(grammarAccess.getVAccess().getGroup(), "rule__V__Group__0");
					put(grammarAccess.getVsubAccess().getGroup_0(), "rule__Vsub__Group_0__0");
					put(grammarAccess.getVsubAccess().getGroup_1(), "rule__Vsub__Group_1__0");
					put(grammarAccess.getPlusAccess().getGroup(), "rule__Plus__Group__0");
					put(grammarAccess.getMinusAccess().getGroup(), "rule__Minus__Group__0");
					put(grammarAccess.getDCAccess().getGroup(), "rule__DC__Group__0");
					put(grammarAccess.getDPAccess().getGroup(), "rule__DP__Group__0");
					put(grammarAccess.getPoint1Access().getGroup(), "rule__Point1__Group__0");
					put(grammarAccess.getPoint2Access().getGroup(), "rule__Point2__Group__0");
					put(grammarAccess.getPoint3Access().getGroup(), "rule__Point3__Group__0");
					put(grammarAccess.getPoint4Access().getGroup(), "rule__Point4__Group__0");
					put(grammarAccess.getMinSecAccess().getGroup(), "rule__MinSec__Group__0");
					put(grammarAccess.getSecDecAccess().getGroup(), "rule__SecDec__Group__0");
					put(grammarAccess.getMinDecAccess().getGroup(), "rule__MinDec__Group__0");
					put(grammarAccess.getDAAccess().getGroup(), "rule__DA__Group__0");
					put(grammarAccess.getDaParams1Access().getGroup(), "rule__DaParams1__Group__0");
					put(grammarAccess.getDaParams2Access().getGroup(), "rule__DaParams2__Group__0");
					put(grammarAccess.getDBAccess().getGroup(), "rule__DB__Group__0");
					put(grammarAccess.getATAccess().getGroup(), "rule__AT__Group__0");
					put(grammarAccess.getOpenAirAccess().getAirspacesAssignment(), "rule__OpenAir__AirspacesAssignment");
					put(grammarAccess.getAirspaceAccess().getThedefAssignment_0(), "rule__Airspace__ThedefAssignment_0");
					put(grammarAccess.getAirspaceAccess().getThegeomAssignment_1(), "rule__Airspace__ThegeomAssignment_1");
					put(grammarAccess.getTheDefAccess().getAsclassAssignment_0(), "rule__TheDef__AsclassAssignment_0");
					put(grammarAccess.getTheDefAccess().getSpAssignment_1(), "rule__TheDef__SpAssignment_1");
					put(grammarAccess.getTheDefAccess().getSbAssignment_2(), "rule__TheDef__SbAssignment_2");
					put(grammarAccess.getTheDefAccess().getNameAssignment_3(), "rule__TheDef__NameAssignment_3");
					put(grammarAccess.getTheDefAccess().getAtAssignment_4(), "rule__TheDef__AtAssignment_4");
					put(grammarAccess.getTheDefAccess().getLimitAssignment_5(), "rule__TheDef__LimitAssignment_5");
					put(grammarAccess.getAsClassAccess().getNameAssignment_2(), "rule__AsClass__NameAssignment_2");
					put(grammarAccess.getSPAccess().getSp0Assignment_1(), "rule__SP__Sp0Assignment_1");
					put(grammarAccess.getSPAccess().getSp1Assignment_3(), "rule__SP__Sp1Assignment_3");
					put(grammarAccess.getSPAccess().getSp2Assignment_5(), "rule__SP__Sp2Assignment_5");
					put(grammarAccess.getSPAccess().getSp3Assignment_7(), "rule__SP__Sp3Assignment_7");
					put(grammarAccess.getSPAccess().getSp4Assignment_9(), "rule__SP__Sp4Assignment_9");
					put(grammarAccess.getSBAccess().getSbVal1Assignment_1(), "rule__SB__SbVal1Assignment_1");
					put(grammarAccess.getSBAccess().getSbVal2Assignment_3(), "rule__SB__SbVal2Assignment_3");
					put(grammarAccess.getSBAccess().getSbVal3Assignment_5(), "rule__SB__SbVal3Assignment_5");
					put(grammarAccess.getAsNameAccess().getNameAssignment_1(), "rule__AsName__NameAssignment_1");
					put(grammarAccess.getLimitesAccess().getLowLimitAssignment_0_0(), "rule__Limites__LowLimitAssignment_0_0");
					put(grammarAccess.getLimitesAccess().getHighLimitAssignment_0_1(), "rule__Limites__HighLimitAssignment_0_1");
					put(grammarAccess.getLimitesAccess().getHeighLimitAssignment_1_0(), "rule__Limites__HeighLimitAssignment_1_0");
					put(grammarAccess.getLimitesAccess().getLowLimitAssignment_1_1(), "rule__Limites__LowLimitAssignment_1_1");
					put(grammarAccess.getLowLimitAccess().getLlAssignment_1(), "rule__LowLimit__LlAssignment_1");
					put(grammarAccess.getHighLimitAccess().getHlAssignment_1(), "rule__HighLimit__HlAssignment_1");
					put(grammarAccess.getFLAccess().getValueAssignment_1(), "rule__FL__ValueAssignment_1");
					put(grammarAccess.getVALAccess().getValueAssignment_0(), "rule__VAL__ValueAssignment_0");
					put(grammarAccess.getVALAccess().getUnitAssignment_1(), "rule__VAL__UnitAssignment_1");
					put(grammarAccess.getVAccess().getVsubAssignment_1(), "rule__V__VsubAssignment_1");
					put(grammarAccess.getVsubAccess().getXAssignment_0_1(), "rule__Vsub__XAssignment_0_1");
					put(grammarAccess.getVsubAccess().getDAssignment_1_1(), "rule__Vsub__DAssignment_1_1");
					put(grammarAccess.getDCAccess().getRadiusAssignment_1(), "rule__DC__RadiusAssignment_1");
					put(grammarAccess.getDPAccess().getDpAssignment_1(), "rule__DP__DpAssignment_1");
					put(grammarAccess.getPoint1Access().getLongDAssignment_0(), "rule__Point1__LongDAssignment_0");
					put(grammarAccess.getPoint1Access().getLongMAssignment_1(), "rule__Point1__LongMAssignment_1");
					put(grammarAccess.getPoint1Access().getLongSAssignment_2(), "rule__Point1__LongSAssignment_2");
					put(grammarAccess.getPoint1Access().getNsAssignment_3(), "rule__Point1__NsAssignment_3");
					put(grammarAccess.getPoint1Access().getLatDAssignment_4(), "rule__Point1__LatDAssignment_4");
					put(grammarAccess.getPoint1Access().getLatMAssignment_5(), "rule__Point1__LatMAssignment_5");
					put(grammarAccess.getPoint1Access().getLatSAssignment_6(), "rule__Point1__LatSAssignment_6");
					put(grammarAccess.getPoint1Access().getWeAssignment_7(), "rule__Point1__WeAssignment_7");
					put(grammarAccess.getPoint2Access().getLongDAssignment_0(), "rule__Point2__LongDAssignment_0");
					put(grammarAccess.getPoint2Access().getLongMfAssignment_1(), "rule__Point2__LongMfAssignment_1");
					put(grammarAccess.getPoint2Access().getNsAssignment_2(), "rule__Point2__NsAssignment_2");
					put(grammarAccess.getPoint2Access().getLatDAssignment_3(), "rule__Point2__LatDAssignment_3");
					put(grammarAccess.getPoint2Access().getLatMfAssignment_4(), "rule__Point2__LatMfAssignment_4");
					put(grammarAccess.getPoint2Access().getWeAssignment_5(), "rule__Point2__WeAssignment_5");
					put(grammarAccess.getPoint3Access().getLongDAssignment_0(), "rule__Point3__LongDAssignment_0");
					put(grammarAccess.getPoint3Access().getLongMAssignment_1(), "rule__Point3__LongMAssignment_1");
					put(grammarAccess.getPoint3Access().getLongSAssignment_2(), "rule__Point3__LongSAssignment_2");
					put(grammarAccess.getPoint3Access().getNsAssignment_3(), "rule__Point3__NsAssignment_3");
					put(grammarAccess.getPoint3Access().getLatDAssignment_4(), "rule__Point3__LatDAssignment_4");
					put(grammarAccess.getPoint3Access().getLatMAssignment_5(), "rule__Point3__LatMAssignment_5");
					put(grammarAccess.getPoint3Access().getLatSAssignment_6(), "rule__Point3__LatSAssignment_6");
					put(grammarAccess.getPoint3Access().getWeAssignment_7(), "rule__Point3__WeAssignment_7");
					put(grammarAccess.getPoint4Access().getLongDAssignment_0(), "rule__Point4__LongDAssignment_0");
					put(grammarAccess.getPoint4Access().getNsAssignment_1(), "rule__Point4__NsAssignment_1");
					put(grammarAccess.getPoint4Access().getLatDAssignment_2(), "rule__Point4__LatDAssignment_2");
					put(grammarAccess.getPoint4Access().getWeAssignment_3(), "rule__Point4__WeAssignment_3");
					put(grammarAccess.getLongDegrAccess().getValueAssignment(), "rule__LongDegr__ValueAssignment");
					put(grammarAccess.getLatDegrAccess().getValueAssignment(), "rule__LatDegr__ValueAssignment");
					put(grammarAccess.getMinSecAccess().getValueAssignment_1(), "rule__MinSec__ValueAssignment_1");
					put(grammarAccess.getSecDecAccess().getValueAssignment_1(), "rule__SecDec__ValueAssignment_1");
					put(grammarAccess.getMinDecAccess().getValueAssignment_1(), "rule__MinDec__ValueAssignment_1");
					put(grammarAccess.getLongDecAccess().getValueAssignment(), "rule__LongDec__ValueAssignment");
					put(grammarAccess.getLatDecAccess().getValueAssignment(), "rule__LatDec__ValueAssignment");
					put(grammarAccess.getDAAccess().getDaAssignment_1(), "rule__DA__DaAssignment_1");
					put(grammarAccess.getDaParams1Access().getRadiusAssignment_0(), "rule__DaParams1__RadiusAssignment_0");
					put(grammarAccess.getDaParams1Access().getAngleStartAssignment_2(), "rule__DaParams1__AngleStartAssignment_2");
					put(grammarAccess.getDaParams1Access().getAngleEndAssignment_4(), "rule__DaParams1__AngleEndAssignment_4");
					put(grammarAccess.getDaParams2Access().getRadiusAssignment_0(), "rule__DaParams2__RadiusAssignment_0");
					put(grammarAccess.getDaParams2Access().getAngleStartAssignment_2(), "rule__DaParams2__AngleStartAssignment_2");
					put(grammarAccess.getDaParams2Access().getAngleEndAssignment_4(), "rule__DaParams2__AngleEndAssignment_4");
					put(grammarAccess.getDBAccess().getDp0Assignment_1(), "rule__DB__Dp0Assignment_1");
					put(grammarAccess.getDBAccess().getDp1Assignment_3(), "rule__DB__Dp1Assignment_3");
					put(grammarAccess.getATAccess().getLpAssignment_1(), "rule__AT__LpAssignment_1");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			www.ubx.ch.ui.contentassist.antlr.internal.InternalOpenAirParser typedParser = (www.ubx.ch.ui.contentassist.antlr.internal.InternalOpenAirParser) parser;
			typedParser.entryRuleOpenAir();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public OpenAirGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(OpenAirGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
